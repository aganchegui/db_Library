CREATE DATABASE db_Library;
GO

USE db_Library;

CREATE TABLE LibraryBranch (
	BranchID TINYINT PRIMARY KEY NOT NULL IDENTITY (1,1),
	BranchName NVARCHAR(50) NOT NULL,
	[Address] NVARCHAR(100) NOT NULL
);

CREATE TABLE Publisher (
	PublisherName NVARCHAR(100) PRIMARY KEY NOT NULL,
	[Address] NVARCHAR(100) NOT NULL,
	Phone NVARCHAR(20) NOT NULL
);

CREATE TABLE Books (
	BookID INT PRIMARY KEY NOT NULL IDENTITY (100,1),
	Title NVARCHAR(100) NOT NULL,
	PublisherName NVARCHAR(100) CONSTRAINT fk_Books_Publisher FOREIGN KEY REFERENCES Publisher(PublisherName) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE BookAuthors (
	BookID INT CONSTRAINT fk_BookAuthors_Books FOREIGN KEY REFERENCES Books(BookID) ON UPDATE CASCADE ON DELETE CASCADE,
	AuthorName NVARCHAR(100) NOT NULL
);

CREATE TABLE BookCopies (
	BookID INT CONSTRAINT fk_BookCopies_Books FOREIGN KEY REFERENCES Books(BookID) ON UPDATE CASCADE ON DELETE CASCADE,
	BranchID TINYINT CONSTRAINT fk_BookCopies_LibraryBranch FOREIGN KEY REFERENCES LibraryBranch(BranchID) ON UPDATE CASCADE ON DELETE CASCADE,
	NumberOfCopies INT NOT NULL
);

CREATE TABLE Borrower (
	CardNo INT PRIMARY KEY NOT NULL IDENTITY (1000,1),
	[Name] NVARCHAR(100) NOT NULL,
	[Address] NVARCHAR(100),
	Phone NVARCHAR(20)
);

CREATE TABLE BookLoans (
	BookID INT CONSTRAINT fk_BookLoans_Books FOREIGN KEY REFERENCES Books(BookID) ON UPDATE CASCADE ON DELETE CASCADE,
	BranchID TINYINT CONSTRAINT fk_BookLoans_LibraryBranch FOREIGN KEY REFERENCES LibraryBranch(BranchID) ON UPDATE CASCADE ON DELETE CASCADE,
	CardNo INT CONSTRAINT fk_BookLoans_Borrower FOREIGN KEY REFERENCES Borrower ON UPDATE CASCADE ON DELETE CASCADE,
	DateOut DATE NOT NULL,
	DateDue DATE NOT NULL
);

INSERT INTO Publisher
	(PublisherName, [Address], Phone)
	VALUES
	('Treehouse', '456 Skyview Rd., Louisville, KY', '372-854-5432'),
	('Ken''s Books', '58433 Red Barn Ct., Hartford, CT', '443-312-7894'),
	('Leap Year', '234 Cloud Dr., Portland, OR', '421-859-3456'),
	('Young & Chase', '594 Newberry St., St. Louis, MO', '876-445-9887'),
	('Riverbed Studios', '38212 S. 25th Ave., New York, NY', '812-567-1111')
;

INSERT INTO Books
	(Title, PublisherName)
	VALUES
	('Lost at Sea', 'Leap Year'),
	('This Time', 'Young & Chase'),
	('Feeling is Like', 'Leap Year'),
	('Sheraton''s Mistake', 'Leap Year'),
	('Big Little Tug', 'Treehouse'),
	('Lost', 'Riverbed Studios'),
	('Run it Back', 'Riverbed Studios'),
	('50 Short Stories', 'Treehouse'),
	('Expectation Gone Wild', 'Young & Chase'),
	('Waking Up', 'Leap Year'),
	('Lying', 'Leap Year'),
	('End of Faith', 'Leap Year'),
	('JavaScript for Dummies', 'Treehouse'),
	('Ultimate Python Course', 'Treehouse'),
	('JQuery Master Class', 'Treehouse'),
	('Read This, Not That', 'Leap Year'),
	('Red Rocket', 'Riverbed Studios'),
	('Little House on the Prarie', 'Ken''s Books'),
	('Put the Brakes On', 'Riverbed Studios'),
	('Love''s for Suckers', 'Riverbed Studios'),
	('Sapiens', 'Leap Year'),
	('Homo Deus', 'Leap Year'),
	('The Lost Tribe', 'Riverbed Studios')
;

INSERT INTO BookAuthors
	(BookID, AuthorName)
	VALUES
	(100, 'Stephen King'),
	(101, 'Megan Kelly'),
	(102, 'Ken Whitehouse'),
	(103, 'Susan Stone'),
	(104, 'Bret Briar'),
	(105, 'Ned Sampson'),
	(106, 'Kelly Krum'),
	(107, 'Ted Rousse'),
	(108, 'Jennifer Cauly'),
	(109, 'Ashley Tack'),
	(110, 'Hannah Banner'),
	(111, 'Cousin Sal'),
	(112, 'Sam Harris'),
	(113, 'Stephen King'),
	(114, 'Megan Kelly'),
	(115, 'Ken Whitehouse'),
	(116, 'Susan Stone'),
	(117, 'Bret Briar'),
	(118, 'Ned Sampson'),
	(119, 'Kelly Krum'),
	(120, 'Ted Rousse'),
	(121, 'Jennifer Cauly'),
	(122, 'Ashley Tack')
;

INSERT INTO LibraryBranch
	(BranchName, [Address])
	VALUES
	('Sharpstown', '112 N. Washington Ave'),
	('Central', '8470 SE 19th Ave'),
	('East', '444 Burnside St.'),
	('South', '982 Laurel St.')
;

INSERT INTO BookCopies
	(BookID, BranchID, NumberOfCopies)
	VALUES
	(100, 1, 5),
	(100, 3, 2),
	(100, 2, 2),
	(101, 2, 4),
	(101, 1, 2),
	(101, 4, 4),
	(102, 1, 3),
	(102, 3, 3),
	(102, 2, 7),
	(103, 4, 2),
	(103, 1, 2),
	(103, 3, 8),
	(104, 3, 4),
	(104, 2, 2),
	(104, 1, 6),
	(104, 4, 8),
	(105, 1, 4),
	(105, 2, 3),
	(105, 3, 8),
	(105, 4, 2),
	(106, 2, 3),
	(106, 1, 4),
	(106, 3, 2),
	(107, 4, 2),
	(107, 3, 5),
	(107, 1, 2),
	(108, 3, 5),
	(108, 1, 4),
	(108, 4, 4),
	(108, 3, 3),
	(108, 2, 9),
	(109, 4, 3),
	(109, 1, 2),
	(109, 2, 3),
	(109, 3, 5),
	(110, 1, 2),
	(110, 2, 5),
	(110, 3, 2),
	(110, 4, 7),
	(111, 4, 3),
	(111, 3, 2),
	(111, 2, 2),
	(111, 1, 6),
	(112, 1, 3),
	(112, 4, 4),
	(113, 3, 2),
	(113, 2, 3),
	(114, 1, 2),
	(114, 2, 6),
	(115, 3, 13),
	(116, 4, 4),
	(116, 3, 2),
	(117, 3, 2),
	(117, 4, 7),
	(117, 1, 2),
	(117, 2, 9),
	(118, 1, 2),
	(118, 2, 7),
	(118, 4, 5),
	(118, 3, 3),
	(119, 1, 2),
	(120, 3, 6),
	(120, 4, 6),
	(120, 1, 3),
	(121, 3, 4),
	(122, 1, 3),
	(122, 2, 8),
	(122, 3, 4),
	(122, 4, 5)
;

INSERT INTO Borrower
	([Name], [Address], Phone)
	VALUES
	('Sheldon Nixon', '598 SE 33rd Ave', '385-849-3822'),
	('Bailey Rose', '498 NE 13th Ave', '490-584-9987'),
	('Karen Diggs', '333 N 2nd Ave', '876-345-8766'),
	('Emily Stein', '321 S. Waterfront Way', '847-944-2322'),
	('Molly Klutch', '999 NE 12th Ave.', '987-541-1264'),
	('Adam Heng', '983 SE Slider Rd.', '954-541-4653'),
	('Franny Victor', '945 NW Pacific Way', '908-333-7643'),
	('Stephen Arntz', '87654 Slough Way', '844-756-9981'),
	('Katie Boyd', '57321 SE 19th Ave.', '983-123-4547'),
	('Ashley Thompson', '89543 S. Winters Ave.', '873-232-4543')
;

INSERT INTO BookLoans
	(BookID, BranchID, CardNo, DateOut, DateDue)
	VALUES
	(100, 1, 1009, '2019-02-28', '2019-03-28'),
	(120, 1, 1009, '2019-03-12', '2019-04-12'),
	(117, 1, 1009, '2019-03-01', '2019-04-01'),
	(101, 4, 1009, '2019-03-12', '2019-04-12'),
	(103, 4, 1009, '2019-02-02', '2019-03-02'),
	(110, 1, 1009, '2019-02-02', '2019-03-02'),
	(102, 1, 1000, '2019-03-14', '2019-04-14'),
	(109, 1, 1000, '2019-02-23', '2019-03-23'),
	(115, 3, 1000, '2019-02-23', '2019-03-23'),
	(113, 3, 1000, '2019-02-23', '2019-03-23'),
	(108, 3, 1000, '2019-02-23', '2019-03-23'),
	(107, 3, 1000, '2019-02-14', '2019-03-14'),
	(105, 2, 1002, '2019-03-01', '2019-04-01'),
	(101, 2, 1002, '2019-03-01', '2019-04-01'),
	(119, 1, 1003, '2019-02-15', '2019-03-15'),
	(122, 1, 1003, '2019-02-15', '2019-03-15'),
	(118, 2, 1003, '2019-02-04', '2019-03-04'),
	(113, 2, 1003, '2019-02-04', '2019-03-04'),
	(116, 4, 1004, '2019-03-14', '2019-04-14'),
	(120, 4, 1004, '2019-03-14', '2019-04-14'),
	(103, 4, 1004, '2019-03-14', '2019-04-14'),
	(104, 3, 1005, '2019-02-27', '2019-03-27'),
	(110, 3, 1005, '2019-02-27', '2019-03-27'),
	(115, 3, 1005, '2019-02-27', '2019-03-27'),
	(121, 3, 1005, '2019-03-10', '2019-04-10'),
	(107, 3, 1005, '2019-03-10', '2019-04-10'),
	(107, 4, 1006, '2019-03-07', '2019-04-07'),
	(105, 4, 1006, '2019-03-07', '2019-03-07'),
	(104, 4, 1006, '2019-03-07', '2019-03-07'),
	(100, 2, 1006, '2019-02-20', '2019-03-20'),
	(109, 2, 1006, '2019-02-14', '2019-03-14'),
	(114, 2, 1006, '2019-02-15', '2019-03-15'),
	(103, 3, 1007, '2019-02-15', '2019-03-15'),
	(107, 3, 1007, '2019-02-15', '2019-03-15'),
	(108, 3, 1007, '2019-02-16', '2019-03-16'),
	(113, 3, 1007, '2019-02-16', '2019-03-16'),
	(118, 2, 1008, '2019-02-17', '2019-03-17'),
	(111, 2, 1008, '2019-02-17', '2019-03-17'),
	(113, 2, 1008, '2019-02-17', '2019-03-17'),
	(106, 1, 1009, '2019-02-19', '2019-03-19'),
	(100, 1, 1009, '2019-02-19', '2019-03-19'),
	(122, 1, 1009, '2019-02-19', '2019-03-19'),
	(120, 1, 1009, '2019-03-01', '2019-04-01'),
	(118, 1, 1009, '2019-03-01', '2019-04-01'),
	(119, 1, 1009, '2019-03-01', '2019-04-01'),
	(111, 4, 1003, '2019-03-09', '2019-04-09'),
	(109, 4, 1003, '2019-03-09', '2019-04-09'),
	(104, 4, 1003, '2019-03-09', '2019-04-09'),
	(101, 4, 1003, '2019-03-04', '2019-04-04'),
	(102, 2, 1008, '2019-03-11', '2019-04-11'),
	(104, 4, 1008, '2019-03-11', '2019-04-11'),
	(100, 1, 1005, '2019-03-15', '2019-04-15')
;
